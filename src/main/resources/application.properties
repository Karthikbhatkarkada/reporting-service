# Application name and HTTP configuration
quarkus.application.name=reporting-service
quarkus.http.port=8087

# Module configuration
styra.module.name=reporting-service
styra.module.display-name=reporting service
styra.module.description=Service for generating reports and analytics

# Packaging configuration
quarkus.package.jar.type=fast-jar

# Database configuration - Primary reporting service database
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME:postgres}
quarkus.datasource.password=${DB_PASSWORD:postgres}
quarkus.datasource.jdbc.url=${DB_URL:jdbc:postgresql://localhost:5432/reporting_service}
quarkus.datasource.jdbc.min-size=${QUARKUS_DATASOURCE_JDBC_MIN_SIZE:0}
quarkus.datasource.jdbc.max-size=${QUARKUS_DATASOURCE_JDBC_MAX_SIZE:5}


# Hibernate ORM and Panache
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.packages=com.styra.platform.reporting.entity,com.styra.platform.common.entity
quarkus.hibernate-orm.physical-naming-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# Liquibase configuration
# Database migration configuration
# quarkus.liquibase.migrate-at-start=true
# quarkus.liquibase.change-log=db/changelog/db.changelog-master.xml

# Redis configuration for high performance caching
quarkus.redis.hosts=${QUARKUS_REDIS_HOSTS:redis://localhost:6379}
quarkus.redis.database=0
quarkus.redis.max-pool-size=${QUARKUS_REDIS_MAX_POOL_SIZE:64}
quarkus.redis.max-pool-waiting=${QUARKUS_REDIS_MAX_POOL_WAITING:128}
quarkus.redis.pool-cleaner-interval=${QUARKUS_REDIS_POOL_CLEANER_INTERVAL:PT30S}

# Production Redis Configuration
%prod.quarkus.redis.max-pool-size=128
%prod.quarkus.redis.max-pool-waiting=256
%prod.quarkus.redis.timeout=PT5S

# Multi-Level Caching Strategy (Caffeine L1 + Redis L2)
# L1 Cache (In-Memory) - Ultra-fast for hot data
quarkus.cache.caffeine."reports".maximum-size=10000
quarkus.cache.caffeine."reports".expire-after-write=30M
quarkus.cache.caffeine."reports".expire-after-access=20M

quarkus.cache.caffeine."report-templates".maximum-size=5000
quarkus.cache.caffeine."report-templates".expire-after-write=1H
quarkus.cache.caffeine."report-templates".expire-after-access=30M

quarkus.cache.caffeine."analytics-data".maximum-size=15000
quarkus.cache.caffeine."analytics-data".expire-after-write=15M
quarkus.cache.caffeine."analytics-data".expire-after-access=10M

quarkus.cache.caffeine."dashboard-metrics".maximum-size=8000
quarkus.cache.caffeine."dashboard-metrics".expire-after-write=5M
quarkus.cache.caffeine."dashboard-metrics".expire-after-access=3M

# L2 Cache (Redis) TTL Configuration
cache.redis.ttl.reports=3600
cache.redis.ttl.report-templates=7200
cache.redis.ttl.analytics-data=1800
cache.redis.ttl.dashboard-metrics=600

# Cache Performance Monitoring
cache.metrics.enabled=true
cache.metrics.caffeine.enabled=true
cache.metrics.redis.enabled=true

# Kafka Configuration for Service Integration
camel.component.kafka.brokers=kafka:29092
kafka.bootstrap.servers=kafka:29092

# Keycloak/OIDC Configuration
# OIDC enabled by default from styra-common - inherits from styra-common
quarkus.oidc.enabled=true
quarkus.keycloak.policy-enforcer.enable=true
quarkus.oidc.auth-server-url=http://keycloak:8080/realms/styra
quarkus.oidc.client-id=styra-services
quarkus.oidc.credentials.secret=${KEYCLOAK_CLIENT_SECRET:styra-service-secret}
quarkus.oidc.application-type=service

# Legacy Keycloak Configuration
keycloak.server-url=http://keycloak:8080
keycloak.realm=styra
keycloak.client-id=reporting-service
keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET:styra-service-secret}
keycloak.admin.username=admin
keycloak.admin.password=${KEYCLOAK_ADMIN_PASSWORD:admin}
keycloak.admin.realm=master
keycloak.admin.client-id=admin-cli

# JWT Configuration
mp.jwt.verify.publickey.location=http://keycloak:8080/realms/styra/protocol/openid-connect/certs
mp.jwt.verify.issuer=http://keycloak:8080/realms/styra
jwt.access-token.expiry-minutes=15
jwt.refresh-token.expiry-hours=24

# Camel configuration
camel.context.name=reporting-service-camel-context
# REST DSL configuration
camel.rest.component=platform-http
camel.rest.binding-mode=json
camel.rest.api-context-path=/api-docs
# Camel main configuration
camel.main.autowired-enabled=true
camel.main.name=reporting-service

# Observability - OpenTelemetry
quarkus.otel.enabled=true
quarkus.otel.exporter.otlp.endpoint=http://jaeger:4317

# Observability - Micrometer/Prometheus
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics
# Make metrics endpoint and health checks public (accessible without authentication)

# Logging configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.category."com.styra.platform".level=DEBUG
quarkus.log.category."org.apache.camel".level=INFO

# SmallRye Config - using default configuration discovery

# Native compilation settings
quarkus.native.resources.includes=db/migration/**

# Service Integration URLs
environment.api.authServiceUrl=${AUTH_SERVICE_URL:http://auth-service:8080}
environment.api.userServiceUrl=${USER_SERVICE_URL:http://user-service:8081}
environment.api.projectServiceUrl=${PROJECT_SERVICE_URL:http://project-service:8082}
environment.api.materialServiceUrl=${MATERIAL_SERVICE_URL:http://material-service:8083}
environment.api.workflowServiceUrl=${WORKFLOW_SERVICE_URL:http://workflow-service:8086}

# Reporting Service Configuration
reporting.pdf.max-size=50MB
reporting.export.formats=pdf,excel,csv
reporting.cache.report-ttl=3600
reporting.async.enabled=true
reporting.async.max-concurrent-jobs=10
reporting.email.enabled=true

# Health Check Configuration
quarkus.smallrye-health.ui.enable=true
quarkus.smallrye-health.ui.always-include=true

# OpenAPI/Swagger Documentation
quarkus.smallrye-openapi.info-title=Reporting Service API
quarkus.smallrye-openapi.info-version=1.0.0
quarkus.smallrye-openapi.info-description=REST API documentation for Reporting Service
quarkus.smallrye-openapi.info-contact-name=Styra Platform Team
quarkus.smallrye-openapi.info-contact-email=api-support@styra.com
quarkus.smallrye-openapi.info-license-name=Apache 2.0
quarkus.smallrye-openapi.info-license-url=http://www.apache.org/licenses/LICENSE-2.0.html

# API Server configuration
quarkus.smallrye-openapi.servers=http://localhost:${quarkus.http.port}
quarkus.smallrye-openapi.operation-id-strategy=class-method

# Security Schemes
#quarkus.smallrye-openapi.security-scheme=jwt
#quarkus.smallrye-openapi.security-scheme-name=bearerAuth

# Additional OpenAPI settings
quarkus.smallrye-openapi.path=/openapi
quarkus.swagger-ui.enable=true
quarkus.swagger-ui.path=/swagger-ui
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.theme=flattop

# API Versioning
quarkus.smallrye-openapi.auto-add-tags=true
quarkus.smallrye-openapi.auto-add-security-requirement=true

# CORS configuration
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:3000,http://localhost:8080,http://localhost:4200
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

# AWS S3 Storage Configuration (dummy values for local development)
storage.aws.access-key=${STORAGE_AWS_ACCESS_KEY:dummy-access-key}
storage.aws.secret-key=${STORAGE_AWS_SECRET_KEY:dummy-secret-key}
storage.aws.bucket-name=${STORAGE_AWS_BUCKET_NAME:styra-storage}
storage.aws.endpoint=${STORAGE_AWS_ENDPOINT:http://localhost:9000}
storage.aws.region=${STORAGE_AWS_REGION:us-east-1}

# Hibernate compatibility settings for Quarkus 3.24+
quarkus.hibernate-orm.mapping.timezone-default-storage=NORMALIZE
quarkus.hibernate-orm.implicit-naming-strategy=default

# Liquibase disabled entirely
quarkus.liquibase.migrate-at-start=false

# Native Image Configuration - Optimized for Free Tier
%native.quarkus.native.resources.includes=application.properties,routes/*.xml
%native.quarkus.native.enable-https-url-handler=false
%native.quarkus.native.enable-all-security-services=false
%native.quarkus.native.enable-all-charsets=false
%native.quarkus.native.include-all-time-zones=false
%native.quarkus.native.enable-jni=false
%native.quarkus.native.compression.level=10
%native.quarkus.native.container-runtime=docker

# Memory optimization
%native.quarkus.vertx.event-loops-pool-size=2
%native.quarkus.thread-pool.core-threads=1
%native.quarkus.thread-pool.max-threads=4

# HTTP optimization for free tier
%native.quarkus.http.idle-timeout=30s
%native.quarkus.http.read-timeout=10s

# Index dependencies for Jandex
quarkus.index-dependency.styra-common.group-id=com.styra.platform
quarkus.index-dependency.styra-common.artifact-id=styra-common


# Database Performance Monitoring Configuration
# Hibernate Metrics and Statistics
quarkus.hibernate-orm.metrics.enabled=true
quarkus.hibernate-orm.statistics=true
quarkus.hibernate-orm.collect-statistics=true

# DataSource Metrics  
quarkus.datasource.metrics.enabled=true


# Performance Thresholds
database.performance.slow-query-threshold-ms=1000
database.performance.very-slow-query-threshold-ms=5000
database.performance.large-result-threshold=1000
database.performance.connection-pool-warning-threshold=0.8

# Custom Metrics Configuration
database.metrics.enabled=true
database.metrics.query-frequency-tracking=true
database.metrics.slow-query-logging=true
database.metrics.connection-pool-monitoring=true
# Service-specific UMA paths (Added by update-services-uma.sh)
# Service: reporting-service (Port: 8087)
# Available scopes: read:reports, write:reports, generate:reports, export:reports, schedule:reports

# Include modern API configuration
%prod.quarkus.profile=prod,modern-api
%dev.quarkus.profile=dev,modern-api
